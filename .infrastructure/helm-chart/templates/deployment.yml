apiVersion: apps/v1
kind: Deployment
metadata:
  name: todoapp
  namespace: todoapp
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.todoapp.maxSurge}}
      maxUnavailable: {{ .Values.rollingUpdate.todoapp.maxUnavailable}}
  selector:
    matchLabels:
      app: todoapp
  template:
    metadata:
      labels:
        app: todoapp
    spec:
      serviceAccountName: secrets-reader
      containers:
      - name: todoapp
        image: {{ .Values.image.todoapp.repository}}: {{ .Values.image.todoapp.tag}}
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: app-secrets-volume
          mountPath: "/app/secrets"
          readOnly: true
        - name: app-config-volume
          mountPath: "/app/configs"
          readOnly: true
        resources:
          requests:
            memory: {{ .Values.resources.requests.todoapp.memory }}
            cpu: {{ .Values.resources.requests.todoapp.cpu }}
          limits:
            memory: {{ .Values.resources.limits.todoapp.memory }}
            cpu: {{ .Values.resources.limits.todoapp.memory }}
        env:
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PYTHONUNBUFFERED
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: SECRET_KEY
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_HOST
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: api/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pvc-data
      - name: app-secrets-volume
        secret:
          secretName: app-secret
      - name: app-config-volume
        configMap:
          name: app-config
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: {{ .Values.affinity.nodeAffinity.key }}
                operator: In
                values:
                - {{ .Values.affinity.nodeAffinity.values }}